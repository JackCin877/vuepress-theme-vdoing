(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{391:function(s,t,a){"use strict";a.r(t);var n=a(3),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"共享内存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#共享内存"}},[s._v("#")]),s._v(" 共享内存")]),s._v(" "),t("h2",{attrs:{id:"_1、共享内存介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、共享内存介绍"}},[s._v("#")]),s._v(" 1、共享内存介绍")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("共享内存允许两个或者多个进程共享物理内存的同一块区域（通常被称为段）")]),s._v("。由于一个共享内存段会成为一个进程用户空间的一部分，因此"),t("strong",[s._v("这种 IPC 机制无需内核介入")]),s._v("。所有需要做的就是让一个进程将数据复制进共享内存中，并且这部分数据会对其 他所有共享同一个段的进程可用。")]),s._v(" "),t("li",[s._v("与管道等要求发送进程将数据从用户空间的缓冲区复制进内核内存和接收进程将数据 从内核内存复制进用户空间的缓冲区的做法相比，这种 IPC 技术的速度更快。")])]),s._v(" "),t("h2",{attrs:{id:"_2、共享内存使用步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、共享内存使用步骤"}},[s._v("#")]),s._v(" 2、共享内存使用步骤")]),s._v(" "),t("ul",[t("li",[s._v("调用 "),t("code",[s._v("shmget()")]),s._v(" "),t("strong",[s._v("创建一个新共享内存段或取得一个既有共享内存段的标识符")]),s._v("（即由其他进程创建的共享内存段）。这个调用将返回后续调用中需要用到的共享内存标识符。")]),s._v(" "),t("li",[s._v("使用 "),t("code",[s._v("shmat()")]),s._v(" 来附上共享内存段，即"),t("strong",[s._v("使该段成为调用进程的虚拟内存的一部分")]),s._v("。")]),s._v(" "),t("li",[s._v("此刻在程序中可以像对待其他可用内存那样对待这个共享内存段。为引用这块共享内存， 程序需要使用由 "),t("code",[s._v("shmat()")]),s._v(" 调用返回的 "),t("code",[s._v("addr")]),s._v(" 值，它是一个"),t("strong",[s._v("指向进程的虚拟地址空间中该共享内存段的起点的指针")]),s._v("。")]),s._v(" "),t("li",[s._v("调用 "),t("code",[s._v("shmdt()")]),s._v(" 来"),t("strong",[s._v("分离共享内存段")]),s._v("。在这个调用之后，进程就无法再引用这块共享内存 了。这一步是可选的，并且在进程终止时会自动完成这一步。")]),s._v(" "),t("li",[s._v("调用 "),t("code",[s._v("shmctl()")]),s._v(" 来"),t("strong",[s._v("删除共享内存段")]),s._v("。只有当当前所有附加内存段的进程都与之分离之后内存段才会销毁。只有一个进程需要执行这一步。")])]),s._v(" "),t("h2",{attrs:{id:"_3、共享内存操作函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、共享内存操作函数"}},[s._v("#")]),s._v(" 3、共享内存操作函数")]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("int shmget(key_t key, size_t size, int shmflg);")]),s._v(" "),t("li",[s._v("void *shmat(int shmid, const void *shmaddr, int shmflg);")]),s._v(" "),t("li",[s._v("int shmdt(const void *shmaddr);")]),s._v(" "),t("li",[s._v("int shmctl(int shmid, int cmd, struct shmid_ds *buf);")]),s._v(" "),t("li",[s._v("key_t ftok(const char *pathname, int proj_id);")])])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[s._v("共享内存相关的函数\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/ipc.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/shm.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmget")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("key_t")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("size_t")]),s._v(" size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" shmflg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 功能：创建一个新的共享内存段，或者获取一个既有的共享内存段的标识。\n        新创建的内存段中的数据都会被初始化为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("\n    参数：\n    \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("key_t")]),s._v("类型是一个整形，通过这个找到或者创建一个共享内存。\n               一般使用"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v("进制表示，非"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("值 \n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" size"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("共享内存的大小 \n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" shmflg"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("属性 \n        \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 访问权限 \n        \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 附加属性：创建 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 判断共享内存是不是存在 \n        \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 创建：IPC_CREAT \n        \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 判断共享内存是否存在： IPC_EXCL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 需要和IPC_CREAT一起使用  \t\t\t\t\tIPC_CREAT "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("IPC_EXCL "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0664")]),s._v(" \n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 返回值： 失败： "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 并设置错误号 \n        \t\t  成功： "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 返回共享内存的引用的ID，后面操作共享内存都是通过这个值。\n\n                                                                    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" shmid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("shmaddr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" shmflg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 功能：和当前的进程进行关联 \n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 参数： \n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" shmid"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("共享内存的标识（ID）"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 由shmget返回值获取 \n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" shmaddr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("申请的共享内存的起始地址，指定"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),s._v("，内核指定 \n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" shmflg"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("对共享内存的操作 \n\t\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 读 ： SHM_RDONLY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 必须要有读权限 \n\t\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 读写： "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" \n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 返回值： 成功：返回共享内存的首（起始）地址。 失败"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n                                                                                                                                     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmdt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("shmaddr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 功能：解除当前进程和共享内存的关联 \n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 参数： shmaddr：共享内存的首地址 \n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 返回值：成功 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("， 失败 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" shmid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cmd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("shmid_ds")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("buf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 功能：对共享内存进行操作。删除共享内存，共享内存要删除才会消失，创建共享内存的进程被销毁了对共享内存是没有任何影响。 \n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 参数： \n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" shmid"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("共享内存的ID \n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" cmd"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("要做的操作 \n        \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" IPC_STAT"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("获取共享内存的当前的状态 \n            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" IPC_SET"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("设置共享内存的状态 \n            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" IPC_RMID"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("标记共享内存被销毁 \n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" buf：需要设置或者获取的共享内存的属性信息 \n                "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" IPC_STAT"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("buf存储数据 \n                "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" IPC_SET"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("buf中需要初始化数据，设置到内核中 \n                "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" IPC_RMID"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("这个buf没有用，"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),s._v("\n\n                                                   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("key_t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ftok")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pathname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" proj_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 功能：根据指定的路径名，和"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("值，生成一个共享内存的key\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 参数：\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" pathname"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("指定一个存在的路径 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("home"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nowcoder"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Linux"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("txt"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" proj_id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("类型的值，但是这系统调用只会使用其中的"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("个字节\n            范围 ： "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),s._v(" 一般指定一个字符 "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'a'")]),s._v("\n            \n            \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br")])]),t("h2",{attrs:{id:"_4、共享内存案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、共享内存案例"}},[s._v("#")]),s._v(" 4、共享内存案例")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//write.shm.c")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/ipc.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/shm.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<string.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1.创建一个共享内存")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第一个参数一般要是16进制，我们这里写100是10进制，其实会被函数内部自动转换为16进制")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" shmid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmget")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" IPC_CREAT "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0664")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shmid : %d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" shmid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2.和当前进程进行关联")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("shmid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"helloworld"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3.写数据")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("memcpy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("strlen")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"按任意键继续\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4.解除关联")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmdt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5.删除共享内存")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("shmid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" IPC_RMID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br")])]),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//read_shm.c")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/ipc.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/shm.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1.获取一个共享内存")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// （获取：第一次参数必须一样，第二个不能比创建时的大，第三个因为我们这里是获取，所以不需要加访问权限）")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" shmid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmget")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" IPC_CREAT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shmid : %d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" shmid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2.和当前进程进行关联")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("shmid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3.读数据")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("ptr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"按任意键继续\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4.解除关联")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmdt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5.删除共享内存")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shmctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("shmid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" IPC_RMID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("h3",{attrs:{id:"运行结果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行结果"}},[s._v("#")]),s._v(" 运行结果：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://jackcin877.github.io/image-hosting/Linux/%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%E6%A1%88%E4%BE%8B.5psqrwj7k1k0.webp",alt:"共享内存案例"}})]),s._v(" "),t("ul",[t("li",[s._v("可以看出，read读取了共享内存中的数据")]),s._v(" "),t("li",[s._v("注意：这里之所以要使用 "),t("code",[s._v("getchar()")]),s._v("去阻塞write进程是因为，我们是在write进程创建的进程，如果 不阻塞 write进程，那么还没等 我们去执行 read进程，我们创建的共享内存就已经被解除关联并删除了，所以我们在向内存写入数据后要阻塞进程，再去执行read进程")])]),s._v(" "),t("h2",{attrs:{id:"_5、共享内存操作命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、共享内存操作命令"}},[s._v("#")]),s._v(" 5、共享内存操作命令")]),s._v(" "),t("h3",{attrs:{id:"_5-1-ipcs-用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-ipcs-用法"}},[s._v("#")]),s._v(" 5.1 ipcs 用法")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[s._v("ipcs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印当前系统中所有的进程间通信方式的信息 ")]),s._v("\nipcs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("m "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印出使用共享内存进行进程间通信的信息 ")]),s._v("\nipcs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("q "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印出使用消息队列进行进程间通信的信息 ")]),s._v("\nipcs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("s "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印出使用信号进行进程间通信的信息 ")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://jackcin877.github.io/image-hosting/Linux/%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4.27rt1se8e52.webp",alt:"共享内存操作命令"}})]),s._v(" "),t("ul",[t("li",[s._v("注意在read进程终止，即取消了关联并 shmctl标记了删除，可以看到，连接数减少了一个，变为1，而键也从64变为了0（声明标记了要删除）\n"),t("ul",[t("li",[s._v("一开始键值为64，也证明了我们传入的key参数会被shmget函数转为16进制（100 -> 64）")])])]),s._v(" "),t("li",[s._v("这里有个奇怪的点，就是老师使用 "),t("code",[s._v("ipcs -m")]),s._v("后显示出来的只用最后我们自己执行的那个，但是我的执行后有前面那些")])]),s._v(" "),t("h3",{attrs:{id:"_5-2-ipcrm-用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-ipcrm-用法"}},[s._v("#")]),s._v(" 5.2 ipcrm 用法")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[s._v("ipcrm "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("M shmkey "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移除用shmkey创建的共享内存段")]),s._v("\nipcrm "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("m shmid "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移除用shmid标识的共享内存段")]),s._v("\nipcrm "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Q msgkey "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移除用msqkey创建的消息队列")]),s._v("\nipcrm "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("q msqid "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移除用msqid标识的消息队列")]),s._v("\nipcrm "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("S semkey "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移除用semkey创建的信号")]),s._v("\nipcrm "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("s semid "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移除用semid标识的信号")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"_6、共享内存思考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、共享内存思考"}},[s._v("#")]),s._v(" 6、共享内存思考")]),s._v(" "),t("h3",{attrs:{id:"问题1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题1"}},[s._v("#")]),s._v(" 问题1：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("操作系统如何知道一块共享内存被多少个进程关联？")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 共享内存维护了一个结构体"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("shmid_ds")]),s._v(" \n 这个结构体中有一个成员 shm_nattch \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" shm_nattach 记录了关联的进程个数\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"问题2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题2"}},[s._v("#")]),s._v(" 问题2：")]),s._v(" "),t("ul",[t("li",[s._v("可不可以对共享内存进行多次删除 shmctl\n"),t("ul",[t("li",[s._v("可以的")])])])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 因为 shmctl 标记删除共享内存，不是直接删除 \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 什么时候真正删除呢"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n  当和共享内存关联的进程数为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("的时候，就真正被删除 \n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 当共享内存的key为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("的时候，表示共享内存被标记删除了 \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果一个进程和共享内存取消关联，那么这个进程就不能继续操作这个共享内存。也不能进行关联。")]),s._v("\n    （其他进程应该也不行，标记删除就是告诉其他进程，这个内存空间你们不许再关联了，因为要删除了。就好比学校有个废弃的饮水机，但是他还在原地没有移走，然后我们为了避免其他人使用，我们给标记一个废除。）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"_3、共享内存和内存映射的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、共享内存和内存映射的区别"}},[s._v("#")]),s._v(" 3、共享内存和内存映射的区别")]),s._v(" "),t("blockquote",[t("ol",[t("li",[t("p",[s._v("共享内存可以直接创建，内存映射需要磁盘文件（匿名映射除外）")])]),s._v(" "),t("li",[t("p",[s._v("共享内存效果更高")])]),s._v(" "),t("li",[t("p",[s._v("内存\n所有的进程操作的是同一块共享内存。\n内存映射，每个进程在自己的虚拟地址空间中有一个独立的内存。（通过文件的方式关联）")])]),s._v(" "),t("li",[t("p",[s._v("数据安全")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//进程突然退出 ")]),s._v("\n\t如果没有释放共享内存，那共享内存还存在（必须标记删除，关联数为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("才被删除）\n\t内存映射区消失 \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//运行进程的电脑死机，宕机了 ")]),s._v("\n  \t数据存在在共享内存中，没有了 \n \t内存映射区的数据，由于磁盘文件中的数据还在，所以内存映射区的数据还存在。（老师的意思应该是重新启动进程之前的通信数据还可以从内存映射的文件加载，而共享内存数据清除后就不可恢复了。）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("生命周期")]),s._v(" "),t("ul",[t("li",[s._v("内存映射区："),t("strong",[s._v("进程退出，内存映射区销毁")])]),s._v(" "),t("li",[s._v("共享内存：进程退出，共享内存还在，需要标记删除（所有的关联的进程数为0），或者关机共享内存才会释放\n"),t("ul",[t("li",[s._v("如果一个进程退出，会自动和共享内存进行取消关联。")])])])])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);